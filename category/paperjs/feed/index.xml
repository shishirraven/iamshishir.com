<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>PaperJS &#8211; Shishir Raven</title>
	<atom:link href="https://shishirraven.github.io/iamshishir.com/category/paperjs/feed/" rel="self" type="application/rss+xml" />
	<link>https://shishirraven.github.io/iamshishir.com/</link>
	<description>I code things</description>
	<lastBuildDate>Wed, 15 Sep 2021 16:21:06 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.0.2</generator>

<image>
	<url>https://s3.amazonaws.com/live.iamshishir.com/wp-content/uploads/2022/03/03101536/cropped-shishir_profie-e1662199926667-32x32.png</url>
	<title>PaperJS &#8211; Shishir Raven</title>
	<link>https://shishirraven.github.io/iamshishir.com/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Multiple Dividing a Path/Shape into multiple parts in PaperJS. Solution.</title>
		<link>https://shishirraven.github.io/iamshishir.com/2021/09/15/multiple-dividing-a-path-shape-into-multiple-parts-in-paperjs/</link>
					<comments>https://shishirraven.github.io/iamshishir.com/2021/09/15/multiple-dividing-a-path-shape-into-multiple-parts-in-paperjs/#respond</comments>
		
		<dc:creator><![CDATA[Shishir Raven]]></dc:creator>
		<pubDate>Wed, 15 Sep 2021 16:21:06 +0000</pubDate>
				<category><![CDATA[PaperJS]]></category>
		<guid isPermaLink="false">https://iamshishir.com/?p=794</guid>

					<description><![CDATA[Problem. I had a shape, say a paper.js Circle that I wanted to divide into multiple parts, based on cut marks. Cut marks are basically lines which overlap the shape. The following is an example. Once I split the shapes they should look like the following. I searched for a solution in the paperJS to [&#8230;]]]></description>
										<content:encoded><![CDATA[
<h2>Problem. </h2>



<p>I had a shape, say a <a href="http://paperjs.org/" target="_blank" rel="noreferrer noopener">paper.js </a>Circle that I wanted to divide into multiple parts, based on cut marks. Cut marks are basically lines which overlap the shape. </p>



<p>The following is an example. </p>



<figure class="wp-block-image size-full is-resized"><img src="https://iamshishir.com/wp-content/uploads/2021/09/image.png" alt="" class="wp-image-795" width="365" height="287" srcset="https://s3.amazonaws.com/live.iamshishir.com/wp-content/uploads/2021/09/03095545/image.png 947w, https://s3.amazonaws.com/live.iamshishir.com/wp-content/uploads/2021/09/03095545/image-300x236.png 300w, https://s3.amazonaws.com/live.iamshishir.com/wp-content/uploads/2021/09/03095545/image-768x605.png 768w" sizes="(max-width: 365px) 100vw, 365px" /></figure>



<p>Once I split the shapes they should look like the following. </p>



<figure class="wp-block-image size-full is-resized"><img loading="lazy" src="https://iamshishir.com/wp-content/uploads/2021/09/image-1.png" alt="" class="wp-image-796" width="378" height="377" srcset="https://s3.amazonaws.com/live.iamshishir.com/wp-content/uploads/2021/09/03095546/image-1.png 603w, https://s3.amazonaws.com/live.iamshishir.com/wp-content/uploads/2021/09/03095546/image-1-300x300.png 300w, https://s3.amazonaws.com/live.iamshishir.com/wp-content/uploads/2021/09/03095546/image-1-150x150.png 150w" sizes="(max-width: 378px) 100vw, 378px" /></figure>



<span id="more-794"></span>



<p>I searched for a solution in the paperJS to find out a decent solution which could help me do this slicing and I found that<a href="http://paperjs.org/reference/path/#divide-path" target="_blank" rel="noreferrer noopener"> divide function from PaperJS</a> can get the task done, but for multiple cuts I would have to create a function. </p>



<p>So as a solution I present that following code which I used to solve this problem. </p>



<pre class="wp-block-code"><code>var myCircle = new Path.Circle(new Point(300, 300), 200);
myCircle.fillColor = 'yellow';
myCircle.strokeColor = 'black';

function splitShape(shape,path)
{
    var partsGroup = new Group();
    partsGroup.addChild(shape);
    // Looping all the Shapes. 
    for(var i=0; i&lt;path.children.length; i++)
    {
        // Dividing the Path Multiple Times. 
     
        
        var tempParts = Array();
        for (var x = 0; x &lt; partsGroup.children.length; x++) {
        if (path.children&#91;i].intersects(partsGroup.children&#91;x])) {
            var result = partsGroup.children&#91;x].divide(path.children&#91;i], { insert: false, stroke: false, trace: false });
            var clone = result.clone();
            result.remove()
            var group = new Group();
            group.addChildren(clone.children);
            for (var s = 0; s &lt; group.children.length; s++) {
                group.children&#91;s].closed=true;
               tempParts.push(group.children&#91;s]);
            }
        }
        else {
                tempParts.push(partsGroup.children&#91;x]);
             }
        } // end for
        
        partsGroup.removeChildren();
        for(var y=0; y&lt;tempParts.length;y++)
        {
           partsGroup.addChild(tempParts&#91;y],{insert:false})
        }
    } // end for
    return partsGroup;
}


var path = new CompoundPath({
    children: &#91;
        new Path.Line(&#91;100, 50], &#91;600, 600]),
        new Path.Line(&#91;300, 50], &#91;800, 600])
    ],
    fillColor: 'black',
    selected: true,
});

var partsGroup = splitShape(myCircle,path)

// Code to Move the Pieces Apart. 
 for (var x = 0; x &lt; partsGroup.children.length; x++) {
     partsGroup.children&#91;x].position = partsGroup.children&#91;x].position + &#91;-10*x,20*x] 
 }
 path.selected=false;
 </code></pre>



<div class="wp-container-1 wp-block-buttons">
<div class="wp-block-button"><a class="wp-block-button__link" href="" target="_blank" rel="noreferrer noopener">Live Demo on Sketch</a></div>
</div>



<p></p>
]]></content:encoded>
					
					<wfw:commentRss>https://shishirraven.github.io/iamshishir.com/2021/09/15/multiple-dividing-a-path-shape-into-multiple-parts-in-paperjs/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>How to Draw an Ellipsis inside a Quadrilateral with 4 points in Paper JS.</title>
		<link>https://shishirraven.github.io/iamshishir.com/2021/03/22/how-to-draw-an-ellipsis-inside-a-quadrilateral-with-4-points-in-paper-js/</link>
					<comments>https://shishirraven.github.io/iamshishir.com/2021/03/22/how-to-draw-an-ellipsis-inside-a-quadrilateral-with-4-points-in-paper-js/#respond</comments>
		
		<dc:creator><![CDATA[Shishir Raven]]></dc:creator>
		<pubDate>Mon, 22 Mar 2021 13:14:15 +0000</pubDate>
				<category><![CDATA[PaperJS]]></category>
		<guid isPermaLink="false">https://iamshishir.com/?p=788</guid>

					<description><![CDATA[To draw a Ellipsis in Paper.js is quite simple and straightforward. You do not need to write a script to that. Problem But in my recent project I faced a situation where I had to draw a ellipsis kind of shape within 4 points (In my case they form a Rectangle.) The problem with the [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p>To draw a Ellipsis in Paper.js is quite simple and straightforward. You do not need to write a script to that. </p>



<p></p>



<h2 id="problem">Problem</h2>



<p>But in my recent project I faced a situation where I had to draw a ellipsis kind of shape within 4 points (In my case they form a Rectangle.)</p>



<p>The problem with the PaperJS way of creating Ellipsis is that we can create a Ellipsis by giving it a Rectangle. But the way rectangles are drawn is only by providing two points which automatically calculates the other two sides. But it assumes that the Rectangle will form at 90 degrees on the Canvas. </p>



<p></p>



<span id="more-788"></span>



<figure class="wp-block-image size-large"><img loading="lazy" width="343" height="340" src="https://iamshishir.com/wp-content/uploads/2021/03/image.png" alt="" class="wp-image-789" srcset="https://s3.amazonaws.com/live.iamshishir.com/wp-content/uploads/2021/03/03095543/image.png 343w, https://s3.amazonaws.com/live.iamshishir.com/wp-content/uploads/2021/03/03095543/image-300x297.png 300w, https://s3.amazonaws.com/live.iamshishir.com/wp-content/uploads/2021/03/03095543/image-150x150.png 150w" sizes="(max-width: 343px) 100vw, 343px" /><figcaption>This is how Paper js uses the two points to create a rectangle. </figcaption></figure>



<p>But when you are drawing a Rotated Rectangle it is not possible to recreate without knowing the Angle of Rotation. </p>



<figure class="wp-block-image size-large"><img loading="lazy" width="393" height="387" src="https://iamshishir.com/wp-content/uploads/2021/03/image-1.png" alt="" class="wp-image-790" srcset="https://s3.amazonaws.com/live.iamshishir.com/wp-content/uploads/2021/03/03095544/image-1.png 393w, https://s3.amazonaws.com/live.iamshishir.com/wp-content/uploads/2021/03/03095544/image-1-300x295.png 300w" sizes="(max-width: 393px) 100vw, 393px" /><figcaption>It cannot draw a rectangular shape like this without assuming that the bottom side is parallel to the ground. </figcaption></figure>



<p>When I am creating a Rectangle with 4 points it cannot always be at a right angle on the Coordinate system. </p>



<p>To draw such a diagram I created a small function. which produces the required output. </p>



<figure class="wp-block-image size-large"><img src="https://iamshishir.com/wp-content/uploads/2021/03/image-2.png" alt="" class="wp-image-791"/><figcaption>Drawing  the Ellipsis inside a Rectangluar box. </figcaption></figure>



<h2 id="solution">Solution </h2>



<pre class="wp-block-code"><code>var rectanglePoints = &#91;&#91;10, 10], &#91;400,10], &#91;400, 500],&#91;10,500]];
var path = new Path({
    segments: rectanglePoints,
    fillColor: 'grey',
    closed: true
});
var midPoints = Array(); 
for(var i=0;i&lt;rectanglePoints.length-1;i++)
{
    var first = rectanglePoints&#91;i];
    var second = rectanglePoints&#91;i+1];
    var x = (first&#91;0]+second&#91;0])/2;
    var y = (first&#91;1]+second&#91;1])/2;
    midPoints.push(&#91;x,y]);
}
    var first = rectanglePoints&#91;rectanglePoints.length-1];
    var second = rectanglePoints&#91;0];
    var x = (first&#91;0]+second&#91;0])/2;
    var y = (first&#91;1]+second&#91;1])/2;
    midPoints.push(&#91;x,y]);
    midPoints.unshift(&#91;x,y])
var path2 = new Path();
path2.strokeColor='red'
path2.strokeWidth= 1,
path2.addSegment(midPoints&#91;0])
for(var i=0;i&lt;rectanglePoints.length;i++)
{
    path2.quadraticCurveTo(rectanglePoints&#91;i], midPoints&#91;i+1])
}
path2.fillColor = 'pink'
</code></pre>



<p>In this function, I use Quadratic Curve to create the Ellipsis. </p>
]]></content:encoded>
					
					<wfw:commentRss>https://shishirraven.github.io/iamshishir.com/2021/03/22/how-to-draw-an-ellipsis-inside-a-quadrilateral-with-4-points-in-paper-js/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Zoom to fit objects in Paper JS.</title>
		<link>https://shishirraven.github.io/iamshishir.com/2019/03/05/zoom-to-fit-objects-in-paper-js/</link>
					<comments>https://shishirraven.github.io/iamshishir.com/2019/03/05/zoom-to-fit-objects-in-paper-js/#respond</comments>
		
		<dc:creator><![CDATA[Shishir Raven]]></dc:creator>
		<pubDate>Tue, 05 Mar 2019 15:05:54 +0000</pubDate>
				<category><![CDATA[PaperJS]]></category>
		<guid isPermaLink="false">http://iamshishir.com/?p=256</guid>

					<description><![CDATA[Objective In a Fixed space of a particular dimension say 500px X 350px. I want the PaperJS diagram to fit such that the everything fits well by scaling itself.]]></description>
										<content:encoded><![CDATA[
<div class="wp-block-ugb-button ugb-button-wrapper ugb-button--align-center"><div><a class="ugb-button ugb-button--align-center ugb-button--size-normal ugb-button--has-icon" href="https://jsfiddle.net/shishirraven/j67Lwdfp/" style="border-radius:49px" target="_blank" rel="noopener noreferrer"><svg aria-hidden="true" data-icon="play-circle" class="svg-inline--fa ugbfa-play-circle fa-w-16 " role="img" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 512 512" value="fas-play-circle"><path fill="currentColor" d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm115.7 272l-176 101c-15.8 8.8-35.7-2.5-35.7-21V152c0-18.4 19.8-29.8 35.7-21l176 107c16.4 9.2 16.4 32.9 0 42z"></path></svg><span class="ugb-button--inner">Demo on JsFiddle</span></a></div></div>



<h2><strong>O</strong>bjective</h2>



<p>In a <strong>Fixed space</strong> of a particular dimension say 500px X 350px. <br>I want the <a href="http://paperjs.org/">PaperJS</a> diagram to fit such that the <strong>everything fits well by scaling itself. </strong></p>



<pre class="wp-block-code"><code>var scope = new paper.PaperScope();

var canvas_1 = document.getElementById('canvas_1');
scope.setup(canvas_1)
scope.activate();

var myCircle = new scope.Path.Circle(new scope.Point(100, 70), 50);
myCircle.fillColor = 'black';
var myCircle = new scope.Path.Circle(new scope.Point(10, 10), 50);
myCircle.fillColor = 'green';
var myCircle = new scope.Path.Circle(new scope.Point(200, 200), 50);
myCircle.fillColor = 'yellow';


$(document).ready(function()
{
	$("#zoom_to_fit").click(function()
  {
    scope.project.activeLayer.fitBounds(scope.view.bounds);
  })
  
}); </code></pre>



<div class="wp-block-ugb-button ugb-button-wrapper ugb-button--align-center"><div><a class="ugb-button ugb-button--align-center ugb-button--size-normal ugb-button--has-icon" href="https://jsfiddle.net/shishirraven/j67Lwdfp/" style="border-radius:49px" target="_blank" rel="noopener noreferrer"><svg aria-hidden="true" data-icon="play-circle" class="svg-inline--fa ugbfa-play-circle fa-w-16 " role="img" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 512 512" value="fas-play-circle"><path fill="currentColor" d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm115.7 272l-176 101c-15.8 8.8-35.7-2.5-35.7-21V152c0-18.4 19.8-29.8 35.7-21l176 107c16.4 9.2 16.4 32.9 0 42z"></path></svg><span class="ugb-button--inner">Demo on JsFiddle</span></a></div></div>
]]></content:encoded>
					
					<wfw:commentRss>https://shishirraven.github.io/iamshishir.com/2019/03/05/zoom-to-fit-objects-in-paper-js/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>How to use multiple canvas for Paper JS on a single page?</title>
		<link>https://shishirraven.github.io/iamshishir.com/2019/03/01/how-to-use-multiple-canvas-for-paper-js-on-a-single-page/</link>
					<comments>https://shishirraven.github.io/iamshishir.com/2019/03/01/how-to-use-multiple-canvas-for-paper-js-on-a-single-page/#respond</comments>
		
		<dc:creator><![CDATA[Shishir Raven]]></dc:creator>
		<pubDate>Fri, 01 Mar 2019 14:14:55 +0000</pubDate>
				<category><![CDATA[How to]]></category>
		<category><![CDATA[PaperJS]]></category>
		<guid isPermaLink="false">http://iamshishir.com/?p=170</guid>

					<description><![CDATA[We can use PaperScope to achieve this. The following is a simple example. I am currently building a complex application which includes drawing architectural layouts. And I need to make multiple canvases to be working in VueJS loops. Please comment and let me know if anyone has good Ideas about how I can make that [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p>We can use PaperScope to achieve this. The following is a simple example. </p>



<pre class="wp-block-code"><code>var scope = new paper.PaperScope();
var scope2 = new paper.PaperScope();

var canvas_1 = document.getElementById('canvas_1');
scope.setup(canvas_1)
var canvas_2 = document.getElementById('canvas_2');
scope2.setup(canvas_2)

scope.activate();
var myCircle = new scope.Path.Circle(new scope.Point(100, 70), 50);
myCircle.fillColor = 'black';

scope2.activate();
var myCircle = new scope2.Path.Circle(new scope2.Point(100, 70), 50);
myCircle.fillColor = 'green';</code></pre>



<div class="wp-block-button"><a class="wp-block-button__link" href="https://jsfiddle.net/shishirraven/g18ab2mc/">Demo on JsFiddle</a></div>



<p>I am currently building a complex application which includes drawing architectural layouts. And I need to make multiple canvases to be working in VueJS loops. Please comment and let me know if anyone has good Ideas about how I can make that happen. </p>
]]></content:encoded>
					
					<wfw:commentRss>https://shishirraven.github.io/iamshishir.com/2019/03/01/how-to-use-multiple-canvas-for-paper-js-on-a-single-page/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Paper JS : Drawing Rectangle with independent Rounded Corners.</title>
		<link>https://shishirraven.github.io/iamshishir.com/2019/01/29/paper-js-drawing-rectangle-with-independent-rounded-corners/</link>
					<comments>https://shishirraven.github.io/iamshishir.com/2019/01/29/paper-js-drawing-rectangle-with-independent-rounded-corners/#respond</comments>
		
		<dc:creator><![CDATA[Shishir Raven]]></dc:creator>
		<pubDate>Tue, 29 Jan 2019 21:54:37 +0000</pubDate>
				<category><![CDATA[How to]]></category>
		<category><![CDATA[PaperJS]]></category>
		<guid isPermaLink="false">http://iamshishir.com/?p=157</guid>

					<description><![CDATA[Paper JS support Rounded Rectangles but it applies it to all corners. In my project I require rounded corners to be applied only to selected corners. Like as shown below. After searching hours on the official document and searching internet for solutions I decided to create a function myself. The following is the function that [&#8230;]]]></description>
										<content:encoded><![CDATA[
<figure class="wp-block-image"><img loading="lazy" width="396" height="136" src="https://iamshishir.com/wp-content/uploads/2019/01/image-2.png" alt="" class="wp-image-159" srcset="https://s3.amazonaws.com/live.iamshishir.com/wp-content/uploads/2019/01/03095214/image-2.png 396w, https://s3.amazonaws.com/live.iamshishir.com/wp-content/uploads/2019/01/03095214/image-2-300x103.png 300w" sizes="(max-width: 396px) 100vw, 396px" /></figure>



<p>Paper JS support Rounded Rectangles but it applies it to all corners. In my project I require rounded corners to be applied only to selected corners. <br>Like as shown below. After searching hours on the official document and searching internet for solutions I decided to create a function myself. </p>



<span id="more-157"></span>



<p>The following is the function that I created that works simply out of box. </p>



<pre class="wp-block-code"><code>var canvas = document.getElementById("myCanvas");

paper.install(window);
paper.setup(canvas);

var cornerSize = new Size(10, 10);


var specialRectangle = function(putOnPoint, boxSize, cornerSizeSpecific) {

    // Finding all the original Points. 
    var point1 = putOnPoint;
    var point2 = point1.add(new Point(boxSize.width, 0));
    var point3 = point2.add(new Point(0, boxSize.height))
    var point4 = point3.subtract(new Point(boxSize.width, 0));;

    var recPath = new Path();
    recPath.closed = true;

    // Top Left Corner
    if (cornerSizeSpecific[0] != null) {
        var firstPoint = putOnPoint.add(new Point(0, cornerSizeSpecific[0].height))
        var lastPoint = putOnPoint.add(new Point(cornerSizeSpecific[0].width, 0))
        var firstSegment = new Segment(firstPoint, null, {
            x: 0,
            y: (cornerSizeSpecific[0].height * -1) / 2
        });
        var secondSegment = new Segment(lastPoint, {
            x: (cornerSizeSpecific[0].width * -1) / 2,
            y: 0
        }, null);
        recPath.add(firstSegment, secondSegment);
        recPath.strokeColor = 'black';
    } else {
        recPath.add(point1);
    }

    // Top Right
    if (cornerSizeSpecific[1] != null) {
        var firstPoint = point2.subtract(new Point(cornerSizeSpecific[0].width, 0))
        var firstSegment = new Segment(firstPoint, null, {
            y: 0,
            x: (cornerSizeSpecific[0].width * 1) / 2
        });
        var lastPoint = point2.add(new Point(0, cornerSizeSpecific[0].height))
        var secondSegment = new Segment(lastPoint, {
            y: (cornerSizeSpecific[0].height * -1) / 2,
            x: 0
        }, null);
        recPath.add(firstSegment, secondSegment);
        recPath.strokeColor = 'black';
    } else {
        recPath.add(point2);
    }

    // Bottom Right
    if (cornerSizeSpecific[2] != null) {
        var firstPoint = point3.subtract(new Point(0, cornerSizeSpecific[0].height))
        var firstSegment = new Segment(firstPoint, null, {
            x: 0,
            y: (cornerSizeSpecific[0].height * 1) / 2
        });
        var lastPoint = point3.subtract(new Point(cornerSizeSpecific[0].width, 0))
        var secondSegment = new Segment(lastPoint, {
            x: (cornerSizeSpecific[0].width * 1) / 2,
            y: 0
        }, null);
        recPath.add(firstSegment, secondSegment);
        recPath.strokeColor = 'black';
    } else {
        recPath.add(point3);
    }

    // Botom Left. 
    if (cornerSizeSpecific[3] != null) {
        var firstPoint = point4.add(new Point(cornerSizeSpecific[0].width, 0))
        var firstSegment = new Segment(firstPoint, null, {
            y: 0,
            x: (cornerSizeSpecific[0].width * -1) / 2
        });
        var lastPoint = point4.subtract(new Point(0, cornerSizeSpecific[0].height))
        var secondSegment = new Segment(lastPoint, {
            y: (cornerSizeSpecific[0].height * 1) / 2,
            x: 0
        }, null);
        recPath.add(firstSegment, secondSegment);
        recPath.strokeColor = 'black';
    } else {
        recPath.add(point4);
    }

    //recPath.fullySelected = true;
    return recPath;

    // Building the first Corner. 
}

/* Running the object.  */
var pointToPlot = new Point(30, 30);
var sizeOfRectangle = new Size(70, 70);
var cornerSizeSpecific = [new Size(10, 10), new Size(10, 10), new Size(10, 10), new Size(10, 10)];
var rectangle = new specialRectangle(pointToPlot, sizeOfRectangle, cornerSizeSpecific);


var pointToPlot = new Point(130, 30);
var sizeOfRectangle = new Size(70, 70);
var cornerSizeSpecific = [new Size(10, 10), null, null, null];
var rectangle = new specialRectangle(pointToPlot, sizeOfRectangle, cornerSizeSpecific);


var pointToPlot = new Point(230, 30);
var sizeOfRectangle = new Size(70, 70);
var cornerSizeSpecific = [new Size(20, 20), new Size(20, 20), null, null];
var rectangle = new specialRectangle(pointToPlot, sizeOfRectangle, cornerSizeSpecific);

rectangle.fullySelected = false;</code></pre>



<p>The following is a running example on JsFiddle. </p>



<iframe loading="lazy" width="100%" height="300" src="//jsfiddle.net/shishirraven/72dxn5t6/118/embedded/" allowfullscreen="allowfullscreen" allowpaymentrequest="" frameborder="0"></iframe>



<p>Please feel free to use in your project and if there are any comments, suggestions or improvements. Please post theme below. </p>



<p></p>
]]></content:encoded>
					
					<wfw:commentRss>https://shishirraven.github.io/iamshishir.com/2019/01/29/paper-js-drawing-rectangle-with-independent-rounded-corners/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Finding closest Point on the line Javascript function with Paper JS Example.</title>
		<link>https://shishirraven.github.io/iamshishir.com/2018/12/20/finding-closest-point-on-the-line/</link>
					<comments>https://shishirraven.github.io/iamshishir.com/2018/12/20/finding-closest-point-on-the-line/#respond</comments>
		
		<dc:creator><![CDATA[Shishir Raven]]></dc:creator>
		<pubDate>Thu, 20 Dec 2018 16:01:45 +0000</pubDate>
				<category><![CDATA[PaperJS]]></category>
		<guid isPermaLink="false">http://iamshishir.com/?p=105</guid>

					<description><![CDATA[For a PaperJS project I was looking for a function where I would pass three points. Two points that form the line and One point from which I have to find the nearest point on the line. And in Return I will get the point on the line which is closest to that point. On [&#8230;]]]></description>
										<content:encoded><![CDATA[
<span id="more-105"></span>



<div class="wp-block-ugb-button ugb-button-wrapper ugb-button--align-center"><div><a class="ugb-button ugb-button--align-center ugb-button--size-medium ugb-button--has-icon" href="https://jsfiddle.net/shishirraven/4dmjh0sa/" style="border-radius:27px" target="_blank" rel="noopener noreferrer"><svg aria-hidden="true" data-icon="play" class="svg-inline--fa ugbfa-play fa-w-14 " role="img" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 448 512" value="fas-play"><path fill="currentColor" d="M424.4 214.7L72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6z"></path></svg><span class="ugb-button--inner">Demo on JsFiddle</span></a></div></div>



<p>For a PaperJS project I was looking for a function where I would pass three points. Two points that form the line and One point from which I have to find the nearest point on the line. And in Return I will get the point on the line which is closest to that point. </p>



<p>On paperJS we already have a simple solution in place which can let us do this called. <strong>getNearestLocation(point)&nbsp;and&nbsp;we&nbsp;can&nbsp;use&nbsp;it&nbsp;on&nbsp;any&nbsp;item.&nbsp;</strong></p>



<p>But in my project I do not want to create an item which will be displayed to use this. So I wanted just a simple function which just takes points as an input and with some research I exactly got the same. </p>



<pre class="wp-block-code"><code>function findNearest( p, a, b ) 
{
    var atob = { x: b.x - a.x, y: b.y - a.y };
    var atop = { x: p.x - a.x, y: p.y - a.y };
    var len = atob.x * atob.x + atob.y * atob.y;
    var dot = atop.x * atob.x + atop.y * atob.y;
    var t = Math.min( 1, Math.max( 0, dot / len ) );
    dot = ( b.x - a.x ) * ( p.y - a.y ) - ( b.y - a.y ) * ( p.x - a.x );
    return new Point(a.x + atob.x * t,a.y + atob.y * t);
}</code></pre>



<p>This function returned exactly what I was looking for. </p>



<p>You can see a running implementation of the same in the JSFiddle example below. </p>



<div class="wp-block-ugb-button ugb-button-wrapper ugb-button--align-center"><div><a class="ugb-button ugb-button--align-center ugb-button--size-medium ugb-button--has-icon" href="https://jsfiddle.net/shishirraven/4dmjh0sa/" style="border-radius:27px" target="_blank" rel="noopener noreferrer"><svg aria-hidden="true" data-icon="play" class="svg-inline--fa ugbfa-play fa-w-14 " role="img" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 448 512" value="fas-play"><path fill="currentColor" d="M424.4 214.7L72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6z"></path></svg><span class="ugb-button--inner">Demo on JsFiddle</span></a></div></div>



<script async="" src="//jsfiddle.net/shishirraven/4dmjh0sa/45/embed/js,html,css,result/dark/"></script>
]]></content:encoded>
					
					<wfw:commentRss>https://shishirraven.github.io/iamshishir.com/2018/12/20/finding-closest-point-on-the-line/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
