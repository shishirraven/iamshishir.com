<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>WordPress REST API &#8211; Shishir Raven</title>
	<atom:link href="/category/wordpress/wordpress-rest-api/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>I code things</description>
	<lastBuildDate>Tue, 05 Apr 2022 06:52:47 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.0.2</generator>

<image>
	<url>https://s3.amazonaws.com/live.iamshishir.com/wp-content/uploads/2022/03/03101536/cropped-shishir_profie-e1662199926667-32x32.png</url>
	<title>WordPress REST API &#8211; Shishir Raven</title>
	<link>/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Custom Post Type returning only posts belonging to the Author in WordPress REST API</title>
		<link>/2022/04/05/custom-post-type-returning-only-posts-belonging-to-the-author-in-wordpress-rest-api/</link>
					<comments>/2022/04/05/custom-post-type-returning-only-posts-belonging-to-the-author-in-wordpress-rest-api/#respond</comments>
		
		<dc:creator><![CDATA[Shishir Raven]]></dc:creator>
		<pubDate>Tue, 05 Apr 2022 06:52:47 +0000</pubDate>
				<category><![CDATA[Wordpress]]></category>
		<category><![CDATA[WordPress REST API]]></category>
		<guid isPermaLink="false">https://iamshishir.com/?p=1181</guid>

					<description><![CDATA[Add the following to your plugin code. Replace &#8216;goals&#8217; with your content type name. About this solution. The great part about this is that you don&#8217;t need to create any custom endpoints to show only the related posts to the author. Can apply very easily for any CUSTOM Posts. Possible Scenarios where can you use [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p></p>



<p></p>



<p>Add the following to your plugin code. <br>Replace &#8216;goals&#8217; with your content type name.</p>



<pre class="wp-block-code"><code>function only_users_goals( $query ) 
{
	if ( $query-&gt;get( 'post_type' ) === 'goals' ) {
		$query-&gt;set( 'author', get_current_user_id() );
	}
}
add_action( 'pre_get_posts', 'only_users_goals' );</code></pre>



<p><strong>About this solution. </strong></p>



<ul><li>The great part about this is that you don&#8217;t need to create any custom endpoints to show only the related posts to the author. </li><li>Can apply very easily for any CUSTOM Posts. </li></ul>



<p><strong>Possible Scenarios where can you use it.  </strong></p>



<p>Suppose you are providing a solution where user wants the user to post and some entries into WordPress custom post type(CPT). there you can apply this solution. </p>
]]></content:encoded>
					
					<wfw:commentRss>/2022/04/05/custom-post-type-returning-only-posts-belonging-to-the-author-in-wordpress-rest-api/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Enabling Filters for Meta Fields in the WordPress Rest API.</title>
		<link>/2022/01/25/enabling-filters-for-meta-fields-in-the-wordpress-rest-api/</link>
					<comments>/2022/01/25/enabling-filters-for-meta-fields-in-the-wordpress-rest-api/#respond</comments>
		
		<dc:creator><![CDATA[Shishir Raven]]></dc:creator>
		<pubDate>Tue, 25 Jan 2022 23:46:47 +0000</pubDate>
				<category><![CDATA[Wordpress]]></category>
		<category><![CDATA[WordPress REST API]]></category>
		<guid isPermaLink="false">https://iamshishir.com/?p=934</guid>

					<description><![CDATA[WordPress has been an excellent platform and as of now it is gaining popularity as a headless CMS. And I too have chosen to keep WordPress as a headless CMS. And why not WordPress has lots of great features and a very active development community. I mean no software is perfect and the best next [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p>WordPress has been an excellent platform and as of now it is gaining popularity as a headless CMS. And I too have chosen to keep WordPress as a headless CMS. And why not WordPress has lots of great features and a very active development community. </p>



<p>I mean no software is perfect and the best next thing to a software is to have something which have lots of active development going on. This way one has lots of support for the software. In in todays world software versions are released more frequently than even and the eco system of development relies on a lot of 3rd party tools and services hence we have to keep the things upto-to-date with these 3rd party tools so in my opinion WordPress is a very good option to chose from. </p>



<p>Secondly the WordPress is a world class CMS. No wonder why WordPress contributes to 36% of the total market share for the websites in the world. </p>



<p>And I will contribute to its Architecture which allows it to be extended without touching the Core System. And this is very much required in todays world because there so many developers and each developer has a different level of experience and through process. So if they change/tamper the original code it would be very difficult to track the changes and also revert them.</p>



<p>Even if you would be able to revert the code still their are chances that it could be improved there. But in case of WordPress they can make small plugins and install them. If something goes wrong you just can turn off the plugin (or deactivate it ) and puff all the problems are gone. </p>



<p>Not only that, this way they developers can independently develop plugins on a separate version of WordPress, test it and then put it on the Original Website. Also it is easy to upload the plugins through the in built system. </p>



<p>All these are the primary reason which has encouraged me to take WordPress as the platform of choice for the current project I am working on. </p>



<h2 id="rest-api">REST API</h2>



<p>Rest API is which makes WordPress Quite a good candidate to work as a Headless CMS, will in my current project not only I am using it as a Headless CMS but more over I am building a software over it which not only Reads the data from the headless CMS but it also writs beck data to it. </p>



<p>But my experience is not straight forward there are some things which do not work out of the box. Like I have been using the WordPress by using Custom Post type and I have extended it with my own field with meta fields. </p>



<p>Now here while I am Reading, Writing data every things works fine out of the Box, but when I am reading data I have some requirements such as ordering the data with the meta fields and also filtering the data. </p>



<p>To achieve ordering of the data based on the meta field I had to use Filters and it was achieved. If you are looking forward to do so the article I wrote about it the following is the <a href="https://iamshishir.com/sorting-orderby-for-custom-meta-fields-in-wordpress/">link</a>. </p>



<figure class="wp-block-embed is-type-wp-embed is-provider-shishir-raven wp-block-embed-shishir-raven"><div class="wp-block-embed__wrapper">
<blockquote class="wp-embedded-content" data-secret="x0PRxVJ6dl"><a href="https://iamshishir.com/sorting-orderby-for-custom-meta-fields-in-wordpress/">WordPress REST API. Sorting/Orderby for custom meta fields in WordPress and fixing &#8220;Invalid parameter(s): orderby&#8221;</a></blockquote><iframe class="wp-embedded-content" sandbox="allow-scripts" security="restricted" title="&#8220;WordPress REST API. Sorting/Orderby for custom meta fields in WordPress and fixing &#8220;Invalid parameter(s): orderby&#8221;&#8221; &#8212; Shishir Raven" src="https://iamshishir.com/sorting-orderby-for-custom-meta-fields-in-wordpress/embed/#?secret=x0PRxVJ6dl" data-secret="x0PRxVJ6dl" width="600" height="338" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe>
</div></figure>



<p>Now the Second problem that I am facing is how to filter the records based on meta fields.  Now I started by research on the internet and I found on the documentation of the WordPress that the filtering option existed in the REST api but now it has been removed from it in the latest versions. The also suggested that there are plugins available which can enable the same functionality again. Now this was disappointing because I love when the WordPress by default provides the functionality because that way I am sure they are going to keep the functionality maintained in the future. </p>



<p>But I had no other option available than to write the functionality yourself. </p>



<p>I found out that the WordPress documentation requests you to write a custom endpoint yourself and then you can get you customized results. Now this is an option but it would been I would have to write all the endpoints myself and this would mean a lot of work. </p>



<p>I needed something which is more like a generic solution enabling the filtering by default.<br>Here is when I found this plugin. </p>



<p><br><a href="https://github.com/WP-API/rest-filter">https://github.com/WP-API/rest-filter</a> </p>



<p>Now it was a great help, the plugin works as intended but writing queries it is difficult because you can write nested queries. So it is very powerful and it works but the problem is that its difficult to form queries. </p>



<p>So for my own purpose I added a little change, instead of sending queries directly as POST variables, I made changes so that I can send them through a JSON Variable. </p>



<p>If anyone needs to do so they can use the following code. </p>



<div class="not-prose">
<script src="https://gist.github.com/shishirraven/b365ac60055f091529d31f6956fb4b18.js"></script>
</div>
]]></content:encoded>
					
					<wfw:commentRss>/2022/01/25/enabling-filters-for-meta-fields-in-the-wordpress-rest-api/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>WordPress REST API. Sorting/Orderby for custom meta fields in WordPress and fixing &#8220;Invalid parameter(s): orderby&#8221;</title>
		<link>/2022/01/24/sorting-orderby-for-custom-meta-fields-in-wordpress/</link>
					<comments>/2022/01/24/sorting-orderby-for-custom-meta-fields-in-wordpress/#respond</comments>
		
		<dc:creator><![CDATA[Shishir Raven]]></dc:creator>
		<pubDate>Mon, 24 Jan 2022 00:24:34 +0000</pubDate>
				<category><![CDATA[Wordpress]]></category>
		<category><![CDATA[WordPress REST API]]></category>
		<guid isPermaLink="false">https://iamshishir.com/?p=902</guid>

					<description><![CDATA[Why? By default in WordPress you can only use the valid fields which are specified by each post type. Read more on WordPresss REST API documentation. This post is useful to you if you might be receiving an error as following. code &#8220;rest_invalid_param&#8221; message &#8220;Invalid parameter(s): orderby&#8221; How can you check which fields are available [&#8230;]]]></description>
										<content:encoded><![CDATA[
<h2 id="why">Why?</h2>



<p>By default in WordPress you can only use the valid fields which are specified by each post type. Read more on <a href="https://developer.wordpress.org/rest-api/using-the-rest-api/pagination/#ordering-results">WordPresss REST API documentation.</a> </p>



<p>This post is useful to you if you might be receiving an error as following. </p>



<figure class="wp-block-table is-style-regular"><table><tbody><tr><td>code</td><td>&#8220;rest_invalid_param&#8221;</td></tr><tr><td>message</td><td>&#8220;Invalid parameter(s): orderby&#8221;</td></tr></tbody></table></figure>



<figure class="wp-block-image alignwide size-full"><img width="627" height="395" src="https://iamshishir.com/wp-content/uploads/2022/01/image-2.png" alt="" class="wp-image-914" srcset="https://s3.amazonaws.com/live.iamshishir.com/wp-content/uploads/2022/01/03095556/image-2.png 627w, https://s3.amazonaws.com/live.iamshishir.com/wp-content/uploads/2022/01/03095556/image-2-300x189.png 300w" sizes="(max-width: 627px) 100vw, 627px" /><figcaption> rest_invalid_param &#8211; error you receive when you put a custom meta field on order by.</figcaption></figure>



<h2 id="how-can-you-check-which-fields-are-available">How can you check which fields are available ?</h2>



<p><strong>REST API </strong>&#8211;<a href="http://oursite.com/wp-json/"> http://yoursite.com/wp-json/</a></p>



<p>The above URL on your WordPress website gives you all the routes and here you can also find all the valid fields for <strong>orderby</strong> parameter you can send while requesting data through REST calls.  </p>



<h2 id="example-to-check-available-orderby-fields-for-posts-content-type">Example to check available orderby fields  for posts content type. </h2>



<p>Example of how you will find all the fields available for post type = <strong>posts</strong>. <br>Check the JSON on the following node. </p>



<div class="wp-block-image"><figure class="aligncenter size-full"><img loading="lazy" width="313" height="148" src="https://iamshishir.com/wp-content/uploads/2022/01/image.png" alt="" class="wp-image-903" srcset="https://s3.amazonaws.com/live.iamshishir.com/wp-content/uploads/2022/01/03095554/image.png 313w, https://s3.amazonaws.com/live.iamshishir.com/wp-content/uploads/2022/01/03095554/image-300x142.png 300w" sizes="(max-width: 313px) 100vw, 313px" /></figure></div>



<p>Inside you will find all the fields like the screenshot pasted below. </p>



<figure class="wp-block-image alignwide size-full"><img loading="lazy" width="895" height="397" src="https://iamshishir.com/wp-content/uploads/2022/01/image-1.png" alt="" class="wp-image-904" srcset="https://s3.amazonaws.com/live.iamshishir.com/wp-content/uploads/2022/01/03095555/image-1.png 895w, https://s3.amazonaws.com/live.iamshishir.com/wp-content/uploads/2022/01/03095555/image-1-300x133.png 300w, https://s3.amazonaws.com/live.iamshishir.com/wp-content/uploads/2022/01/03095555/image-1-768x341.png 768w" sizes="(max-width: 895px) 100vw, 895px" /></figure>



<p>Similar how we see the the available fields for the posts type we can also see the fields available for other content types. </p>



<div class="wp-container-1 wp-block-group p-5 has-background" style="background-color:#fffeef">
<p><img src="https://s.w.org/images/core/emoji/14.0.0/72x72/1f4a1.png" alt="💡" class="wp-smiley" style="height: 1em; max-height: 1em;" /> Tip</p>



<p>If you open the link in Firefox it will give you a hierarchical navigation like below whereas Chrome just throws raw JSON which is difficult to read without a JSON Parser such as this one <a href="http://json.parser.online.fr/ ">http://json.parser.online.fr/ </a> you might have to paste the raw JSON content to read it properly. </p>
</div>



<h2 id="making-our-custom-fields-available-for-the-rest-api-order-by">Making our custom fields available for the REST API order by. </h2>



<p>We would need to add some code to functions.php either inside your plugin or theme. <br></p>



<p>To make our custom field available we will use two filters</p>



<ol><li><strong>&#8216;rest_&#8217; . $post_type . &#8216;_collection_params&#8217;</strong><br>We will use to  add our custom fields to the allowed list of fields. </li><li><strong>&#8216;rest_&#8217; . $post_type . &#8216;_query </strong><br>Will use to add the order by functionality when our API is called. </li></ol>



<p>Add the following code and replace &#8220;wf_account&#8221; with your own post type. <br>And fields with your own fields. </p>



<div class="not-prose">
<script src="https://gist.github.com/shishirraven/0045230a8913737c1ed02a671c757cb5.js"></script>
</div>



<p>Once you do so you would be able to see the new fields available and the error will go away. . </p>



<p>The second step is to make the orderBy Work for your fields add the following code. </p>



<div class="not-prose">
<script src="https://gist.github.com/shishirraven/651aae2a8b227dc91458f0053f41c255.js"></script>
</div>



<p>Once you add these two functions your sorting will start working. </p>



<h3 id="initiating-the-function-only-when-rest-api-is-used">Initiating the function only when REST API is used. </h3>



<p>Well we don&#8217;t need these functions to load up when the normal WordPress is being used so we will call them  when REST API is used using action <a href="https://developer.wordpress.org/reference/hooks/rest_api_init/">rest_api_init</a>. this will keep our code optimized. </p>



<p>Here is the complete example </p>



<div class="not-prose">
<script src="https://gist.github.com/shishirraven/9899390c644e0cda14725a1b30ed5f87.js"></script>
</div>



<p>That&#8217;s it. If you </p>
]]></content:encoded>
					
					<wfw:commentRss>/2022/01/24/sorting-orderby-for-custom-meta-fields-in-wordpress/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
